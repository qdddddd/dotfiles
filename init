#!/bin/zsh

setopt EXTENDED_GLOB
setopt +o nomatch

git submodule update --init --recursive

# Create local bin sym links
function() {
    local BINDIR=$HOME/.local/bin
    mkdir -p $BINDIR

    for xfile in ${PWD}/bin/*; do
        ln -s "$xfile" "$BINDIR/${xfile:t}"
    done
}

#############################

# Some useful functions

is_mac() {
    [[ "$OSTYPE" == "darwin"* ]]
}

is_linux() {
    [[ "$OSTYPE" == 'linux-gnu'* ]]
}

command_exists() {
    (( $+commands[$1] ));
}

standard_install() {
    if ! (command_exists $1); then
        if is_mac; then
            brew install $1
        elif is_linux; then
            sudo apt-get install $1
        fi
    fi
}

#############################

# Intall homebrew
if is_mac && ! (command_exists brew); then
    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    PATH=$PATH:/opt/homebrew/bin
fi

# Install pip
if ! (command_exists pip3); then
    if is_linux; then
        sudo apt-get install python3 python3-distutils python3-apt
    fi
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    sudo python3 get-pip.py
    rm get-pip.py
fi

# Install ag
if ! (command_exists ag); then
    if is_linux; then
        sudo apt-get install silversearcher-ag
    elif is_mac; then
        brew install the_silver_searcher
    fi
fi

# Install fzf
if [ ! -s $HOME/.fzf ]; then
    git clone --depth 1 git@github.com:junegunn/fzf.git $HOME/.fzf
    $HOME/.fzf/install --bin
fi

# Install autojump
standard_install autojump

# Install thefuck
if ! (command_exists fuck); then
    pip3 install thefuck
fi

# Install vim-plug
if [ ! -s $HOME/.vim/autoload/plug.vim ]; then
    curl -fLo ~/.vim/autoload/plug.vim --create-dirs \
        https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

# Install dependencies for Coc
if ! (command_exists node); then
    curl -sL install-node.now.sh | sudo bash
fi

if ! (command_exists yarn); then
    curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
fi

rm $HOME/.zshrc

# Create zsh config sym links
for rcfile in "${PWD}"/zsh/configs/*; do
    ln -s "$rcfile" "$HOME/.${rcfile:t}"
done

# Create .zshrc.local
function () {
    local RCLOCAL=$HOME/.zshrc.local
    touch $RCLOCAL
    if ! grep -q "export ZSH_THEME_COLOR=" $RCLOCAL; then
    cat <<EOF >>$RCLOCAL
export ZSH_THEME_COLOR=66
source ~/.p10k.zsh
restore_tmux main
EOF
    fi
}

# Install nvim
if ! (command_exists nvim); then
    ${PWD}/scripts/install_neovim
fi

source $HOME/.zshrc

function() {
    # Create vim config sym links
    local DOT_VIM_DIR=${PWD}/vim
    #for lcfile in ${DOT_VIMRC_DIR}/^*(README.md|nvim)*; do
    for lcfile in ${DOT_VIM_DIR}/(rc|ext)/*; do
        ln -s "$lcfile" "$HOME/.vim/${lcfile:t}"
    done

    # Create nvim config sym links
    if (command_exists nvim); then
        local NVIM_CONFIG_DIR=$HOME/.config/nvim
        mkdir -p ${NVIM_CONFIG_DIR}
        for lcfile in ${DOT_VIM_DIR}/nvim/*; do
            ln -s "$lcfile" "${NVIM_CONFIG_DIR}/${lcfile:t}"
        done

        nvim +UpdateRemotePlugins +qa!
    fi

    vi +PlugInstall +PlugClean +qa!
}

# Install tmux
standard_install tmux
git clone git@github.com:tmux-plugins/tpm $HOME/.tmux/plugins/tpm
$HOME/.tmux/plugins/tpm/scripts/install_plugins.sh
$HOME/.tmux/plugins/tpm/scripts/source_plugins.sh

# Install tree
standard_install tree

# Install Kitty
if ! (command_exists kitty); then
    read "REPLY?Install kitty? [Y/n] "
    echo
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        ${PWD}/scripts/install_kitty
        if is_linux; then
            ln -s ~/.local/kitty.app/bin/kitty ~/.local/bin/
            cp ~/.local/kitty.app/share/applications/kitty.desktop ~/.local/share/applications/
            cp ~/.local/kitty.app/share/applications/kitty-open.desktop ~/.local/share/applications/
            wget https://raw.githubusercontent.com/igrmk/whiskers/main/whiskers_256x256.png -O $HOME/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png
            sed -i "s|Icon=kitty|Icon=/home/$USER/.local/kitty.app/share/icons/hicolor/256x256/apps/kitty.png|g" ~/.local/share/applications/kitty*.desktop
            sed -i "s|Exec=kitty|Exec=/home/$USER/.local/kitty.app/bin/kitty|g" ~/.local/share/applications/kitty*.desktop
        fi
        mkdir -p $HOME/.config/kitty
        ln -s ${PWD}/kitty/* "$HOME/.config/kitty"
    fi
fi

#############################

# Create sym links for dot configs
for dotfile in ${PWD}/dotconf/*; do
    ln -s "$dotfile" "$HOME/.${dotfile:t}"
done
