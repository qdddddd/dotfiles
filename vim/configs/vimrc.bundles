" Environment {

        " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        call plug#begin('~/.vim/bundle')
    " }

    function! s:deregister(repo)
        let repo = substitute(a:repo, '[\/]\+$', '', '')
        let name = fnamemodify(repo, ':t:s?\.git$??')
        call remove(g:plugs, name)
        call remove(g:plugs_order, index(g:plugs_order, name))
    endfunction

    command! -nargs=+ -bar Bundle call plug#(<args>)
    command! -nargs=1 -bar UnBundle call s:deregister(<args>)
" }

" Bundles {

    " General {
        Bundle 'bling/vim-bufferline'
        Bundle 'easymotion/vim-easymotion'
        Bundle 'mbbill/undotree'
        Bundle 'mhinz/vim-signify'
        Bundle 'rhysd/conflict-marker.vim'
        Bundle 'terryma/vim-multiple-cursors'
        Bundle 'tpope/vim-fugitive'
        Bundle 'tpope/vim-repeat'
        Bundle 'tpope/vim-surround'
        Bundle 'vim-airline/vim-airline'
        Bundle 'vim-airline/vim-airline-themes'
        Bundle 'vim-scripts/matchit.zip'
        Bundle 'vim-scripts/restore_view.vim'
        Bundle 'vim-scripts/sessionman.vim'
    " }

    " File explorer {
        Bundle '/usr/local/opt/fzf'
        Bundle 'junegunn/fzf.vim'
        Bundle 'Shougo/defx.nvim', {
                    \ 'do': 'pip3 install pynvim'
                    \ }
        Bundle 'roxma/nvim-yarp'
        Bundle 'roxma/vim-hug-neovim-rpc', {
                    \ 'do': 'pip3 install neovim'
                    \ }
        Bundle 'kristijanhusak/defx-git'
        Bundle 'kristijanhusak/defx-icons'
    " }

    " Writing {
        Bundle 'reedes/vim-litecorrect'
        Bundle 'reedes/vim-textobj-quote'
        Bundle 'reedes/vim-textobj-sentence'
    " }

    " General Programming {
        Bundle 'scrooloose/nerdcommenter'
        Bundle 'godlygeek/tabular'
        Bundle 'luochen1990/rainbow'
        if executable('ctags')
            Bundle 'majutsushi/tagbar'
        endif
        Bundle 'skywind3000/asyncrun.vim'
        Bundle 'octol/vim-cpp-enhanced-highlight'
    " }

    " AutoComplete {
        Bundle 'honza/vim-snippets'
        if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
            source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
        endif
        Bundle 'Shougo/echodoc.vim'

        function! BuildCoc(info)
            !./install.sh
            CocInstall coc-pairs
            CocInstall coc-ultisnips
            CocInstall coc-lists
        endfunction
        Bundle 'neoclide/coc.nvim', {'tag': '*', 'do': function('BuildCoc')}
    " }

    " Misc {
        Bundle 'Konfekt/FastFold'
        Bundle 'Yggdroot/indentLine'
        Bundle 'airblade/vim-rooter'
        Bundle 'christoomey/vim-tmux-navigator'
        Bundle 'lifepillar/vim-cheat40'
        Bundle 'mhinz/vim-startify'
        Bundle 'morhetz/gruvbox'
        Bundle 'qdddddd/vim-cycle-airline-theme'
        Bundle 'quentindecock/vim-cucumber-align-pipes'
        Bundle 'spf13/vim-preview'
        Bundle 'tfnico/vim-gradle'
        Bundle 'tpope/vim-cucumber'
        Bundle 'tpope/vim-markdown'
        Bundle 'w0rp/ale'
        "Bundle 'vim-scripts/CycleColor'
    " }
" }

if has('macunix')
    Bundle 'philpep/vim-rst-tables'
endif

call plug#end()
