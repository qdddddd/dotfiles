" Modeline and Notes {

" Environment {

    " Basics {
        set nocompatible        " Must be first line
    " }

        " Setup Bundle Support {
        " The next three lines ensure that the ~/.vim/bundle/ system works
        filetype off
        call plug#begin('~/.vim/bundle')
    " }

    function! s:deregister(repo)
        let repo = substitute(a:repo, '[\/]\+$', '', '')
        let name = fnamemodify(repo, ':t:s?\.git$??')
        call remove(g:plugs, name)
        call remove(g:plugs_order, index(g:plugs_order, name))
    endfunction

    command! -nargs=+ -bar Bundle call plug#(<args>)
    command! -nargs=1 -bar UnBundle call s:deregister(<args>)
" }

" Bundles {

    " General {
        Bundle 'bling/vim-bufferline'
        Bundle 'easymotion/vim-easymotion'
        Bundle 'jiangmiao/auto-pairs'
        Bundle 'mbbill/undotree'
        Bundle 'mhinz/vim-signify'
        Bundle 'rhysd/conflict-marker.vim'
        Bundle 'terryma/vim-multiple-cursors'
        Bundle 'tpope/vim-fugitive'
        Bundle 'tpope/vim-repeat'
        Bundle 'tpope/vim-surround'
        Bundle 'vim-airline/vim-airline'
        Bundle 'vim-airline/vim-airline-themes'
        Bundle 'vim-scripts/matchit.zip'
        Bundle 'vim-scripts/restore_view.vim'
        Bundle 'vim-scripts/sessionman.vim'
    " }

    " File explorer {
        Bundle 'junegunn/fzf.vim'
        Bundle 'Shougo/defx.nvim'
        Bundle 'roxma/nvim-yarp'
        Bundle 'roxma/vim-hug-neovim-rpc', {
                    \ 'do': 'pip3 install neovim'
                    \ }
        Bundle 'kristijanhusak/defx-git'
        "Bundle 'kristijanhusak/defx-icons'

        "Bundle 'Xuyuanp/nerdtree-git-plugin'
        "Bundle 'jistr/vim-nerdtree-tabs'
        "Bundle 'scrooloose/nerdtree'
        "Bundle 'Yggdroot/LeaderF'
    " }

    " Writing {
        Bundle 'reedes/vim-litecorrect'
        Bundle 'reedes/vim-textobj-quote'
        Bundle 'reedes/vim-textobj-sentence'
    " }

    " General Programming {
        Bundle 'scrooloose/nerdcommenter'
        Bundle 'godlygeek/tabular'
        Bundle 'luochen1990/rainbow'
        if executable('ctags')
            Bundle 'majutsushi/tagbar'
        endif
        Bundle 'skywind3000/asyncrun.vim'
        Bundle 'octol/vim-cpp-enhanced-highlight'
    " }

    " AutoComplete {
        Bundle 'honza/vim-snippets'
        " Source support_function.vim to support vim-snippets.
        if filereadable(expand("~/.vim/bundle/vim-snippets/snippets/support_functions.vim"))
            source ~/.vim/bundle/vim-snippets/snippets/support_functions.vim
        endif
        Bundle 'SirVer/ultisnips'
        Bundle 'Valloric/YouCompleteMe', {
                    \ 'do': 'python3 install.py --java-completer --clangd-completer --system-boost',
                    \ }
        "Bundle 'prabirshrestha/asyncomplete.vim'
        "Bundle 'prabirshrestha/asyncomplete-lsp.vim'

        "Bundle 'Shougo/neosnippet'
        "Bundle 'Shougo/neosnippet-snippets'
        Bundle 'Shougo/deoplete.nvim'
        Bundle 'lighttiger2505/deoplete-vim-lsp'

        "Bundle 'Shougo/neocomplcache'
        "Bundle 'Shougo/neocomplete.vim'
    " }


    " Python {
        Bundle 'python-mode/python-mode', { 'branch': 'develop' }
    " }

    " Json {
        Bundle 'elzr/vim-json'
    " }

    " Go Lang {
        "Bundle 'fatih/vim-go'
    " }

    " LSP {
        "Bundle 'autozimu/LanguageClient-neovim', {
                    "\ 'branch': 'next',
                    "\ 'do': './install.sh',
                    "\ }
        Bundle 'prabirshrestha/async.vim'
        Bundle 'prabirshrestha/vim-lsp'
        if filereadable(expand("~/.vim/bundle/vim-lsp"))
            source ~/.vim/bundle/vim-lsp/autoload/lsp.vim
        endif
    " }

    " Misc {
        Bundle 'Konfekt/FastFold'
        Bundle 'Yggdroot/indentLine'
        Bundle 'airblade/vim-rooter'
        Bundle 'christoomey/vim-tmux-navigator'
        Bundle 'lifepillar/vim-cheat40'
        Bundle 'mhinz/vim-startify'
        Bundle 'morhetz/gruvbox'
        Bundle 'qdddddd/vim-cycle-airline-theme'
        Bundle 'quentindecock/vim-cucumber-align-pipes'
        Bundle 'spf13/vim-preview'
        Bundle 'tfnico/vim-gradle'
        Bundle 'tpope/vim-cucumber'
        Bundle 'tpope/vim-markdown'
        Bundle 'w0rp/ale'
        "Bundle 'blueyed/vim-diminactive'
        "Bundle 'vim-scripts/CycleColor'
    " }
" }

if has('macunix')
    Bundle 'philpep/vim-rst-tables'
    Bundle 'xuhdev/vim-latex-live-preview', { 'for': 'tex' }
endif

call plug#end()
