
# ----------------------
# General Settings
# -----------------------
set -g visual-activity on

set -g mode-keys vi
set -g history-limit 10000

# make vim a bit faster
set -s escape-time 5

set -sg escape-time 1
set -g base-index 1
setw -g pane-base-index 1

# Mouse works as expected
set -g mouse on

# maximize the window size to the bigger one
setw -g aggressive-resize
if-shell "$TERM_PROGRAM =~ ^iTerm" "setw -g aggressive-resize off"

# re-number windows when one is closed
set -g renumber-windows on

# word separators for automatic word selection
setw -g word-separators ' @"=()[]_-:,.'
setw -ag word-separators "'"

# ----------------------
# Key Bindings
# -----------------------
# Prefix is Ctrl-q
unbind C-b
set -g prefix C-q
bind C-q send-prefix

# Do not copy selection and cancel copy mode on drag end event
unbind -T copy-mode-vi MouseDragEnd1Pane
# Instead, select, then mouse click to copy to buffer
bind -T copy-mode-vi MouseDown1Pane select-pane \; send-keys -X copy-pipe "pbcopy" \; send-keys -X clear-selection

# y and p as in vim
bind a copy-mode
unbind p
bind p paste-buffer
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection
set -g set-clipboard on

# extra commands for interacting with the ICCCM clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# easy-to-remember split pane commands
bind v split-window -h
bind s split-window -v
unbind '"'
unbind %

# moving between windows with vim movement keys
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# toggle synchronize-panes
bind -n C-s setw synchronize-panes

# source config
bind-key r source-file $HOME/.tmux.conf \; display-message "tmux.conf is reloaded"

# vim-tmux-navigator. See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key h if-shell "$is_vim" "send-keys ˙"  "select-pane -L"
bind-key j if-shell "$is_vim" "send-keys ∆"  "select-pane -D"
bind-key k if-shell "$is_vim" "send-keys ˚"  "select-pane -U"
bind-key l if-shell "$is_vim" "send-keys ¬"  "select-pane -R"
#bind-key \ if-shell "$is_vim" "send-keys «"  "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
#bind-key -T copy-mode-vi C-\ select-pane -l

# swap the only two panes in a window
bind ` swap-pane -s 1 -t 2

setw -g automatic-rename on

# ----------------------
# Status Bar
# -----------------------
set -g status-position top
setw -g monitor-activity off
set -g status-justify centre

set -g status-interval 120
set -g status-left-length 30
set -g status-right-length 30

set -g status-left ' [ #S | #(hostname) ]'
set -g status-right '#(date +"%a %b %_d %H:%M") '

# define colour variables
DARK_BLUE="#076678"
ORANGE="#d65d01"
LIGHT_GRAY="#d5c4a1"
BLACK="#1d2021"
PURPLE="#8f3f71"

STATUS_BG="#665c54"
STATUS_FG="#fabd2f"
INACTIVE_FG=$LIGHT_GRAY
ACTIVE_FG=$STATUS_FG
SYN_BG=$ACTIVE_FG
SYN_FG=$STATUS_BG

# default statusbar colors
set -g status-style bg=$STATUS_BG,fg=$STATUS_FG

# default window title style (splits: │|)
setw -g window-status-format "#{?#{==:#I,1},,| }#I: #W#F"
setw -g window-status-style bg=default,fg=$INACTIVE_FG

# active window title colors
window_format="#[fg=$ACTIVE_FG,bg=default,bright]#I#[fg=default,bg=default,default].#P:#[fg=#{?pane_synchronized,$STATUS_BG,$ACTIVE_FG},bg=#{?pane_synchronized,$ACTIVE_FG,default},bright] #W#F"
setw -g window-status-current-style fg=default
setw -g window-status-current-format "#{?#{==:#I,1},,| }"$window_format

# pane border
set -g pane-border-style bg=default,fg=$LIGHT_GRAY
set -g pane-active-border-style bg=default,fg=$DARK_BLUE

# message text
set -g message-style bg=$STATUS_BG,fg=$ACTIVE_FG

# pane number display
set -g display-panes-active-colour $DARK_BLUE
set -g display-panes-colour $ORANGE

# clock
setw -g clock-mode-colour $PURPLE

# ----------------------
# Plugins
# -----------------------
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'
set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'

set -g @plugin 'tmux-plugin/tmux-continuum'
set -g @continuum-restore 'on'

set -g @plugin 'tmux-plugins/tmux-sidebar'
set -g @sidebar-tree-focus 'e'
set -g @sidebar-tree-command 'tree -L 4 -C'

run -b '~/.tmux/plugins/tpm/tpm'

# ----------------------
# Anything Needs to Be at the Bottom
# -----------------------
set -g default-terminal "screen-256color"
set -ga terminal-overrides ",*256col*:Tc"
set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'
